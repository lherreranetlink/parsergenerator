<programa> = <Definiciones> 
<Definiciones> = \e 
<Definiciones> = <Definicion> <Definiciones> 
<Definicion> = <DefVar> 
<Definicion> = <DefFunc> 
<DefVar> = tipo identificador <ListaVar> ; 
<ListaVar> = \e 
<ListaVar> = , identificador <ListaVar> 
<DefFunc> = tipo identificador ( <Parametros> ) <BloqFunc> 
<Parametros> = \e 
<Parametros> = tipo identificador <ListaParam> 
<ListaParam> = \e 
<ListaParam> = , tipo identificador <ListaParam> 
<BloqFunc> = { <DefLocales> } 
<DefLocales> = \e 
<DefLocales> = <DefLocal> <DefLocales> 
<DefLocal> = <DefVar> 
<DefLocal> = <Sentencia> 
<Sentencias> = \e 
<Sentencias> = <Sentencia> <Sentencias> 
<Sentencia> = identificador = <Expresion> ; 
<Sentencia> = if ( <Expresion> ) <SentenciaBloque> <Otro> 
<Sentencia> = while ( <Expresion> ) <Bloque> 
<Sentencia> = return <ValorRegresa> ; 
<Sentencia> = <LlamadaFunc> ; 
<Otro> = \e 
<Otro> = else <SentenciaBloque> 
<Bloque> = { <Sentencias> } 
<ValorRegresa> = \e 
<ValorRegresa> = <Expresion> 
<Argumentos> = \e 
<Argumentos> = <Expresion> <ListaArgumentos> 
<ListaArgumentos> = \e 
<ListaArgumentos> = , <Expresion> <ListaArgumentos> 
<Termino> = <LlamadaFunc> 
<Termino> = identificador 
<Termino> = entero 
<Termino> = real 
<Termino> = cadena 
<LlamadaFunc> = identificador ( <Argumentos> ) 
<SentenciaBloque> = <Sentencia> 
<SentenciaBloque> = <Bloque> 
<Expresion> = ( <Expresion> ) 
<Expresion> = opSuma <Expresion> 
<Expresion> = opNot <Expresion> 
<Expresion> = <Expresion> opMul <Expresion> 
<Expresion> = <Expresion> opSuma <Expresion> 
<Expresion> = <Expresion> opRelac <Expresion> 
<Expresion> = <Expresion> opIgualdad <Expresion> 
<Expresion> = <Expresion> opAnd <Expresion> 
<Expresion> = <Expresion> opOr <Expresion> 
<Expresion> = <Termino> 
